{
  "id": "transfer-component",
  "name": "Transfer Component",
  "repository": {
    "type": "git",
    "url": "https://github.com/101digital/transfer-component.git"
  },
  "config": {
    "env": {
      "development": {
        "paymentBaseUrl": "https://api-ud-ow-dev.101digital.io/payment-service/1.0.0",
        "contactBaseUrl": "https://api-ud-ow-dev.101digital.io/contact-service/1.0.0",
        "bankInformationBaseUrl": "https://api-ud-ow-dev.101digital.io/bank-information-service/1.0.0",
        "udScheme": "PH.PlatformDefined.Id",
        "pesonetScheme": "PH.BRSTN.AccountNumer",
        "instapayScheme": ""
      },
      "staging": {
        "paymentBaseUrl": "https://api-ud-ow-dev.101digital.io/payment-service/1.0.0",
        "contactBaseUrl": "https://api-ud-ow-dev.101digital.io/contact-service/1.0.0",
        "bankInformationBaseUrl": "https://api-ud-ow-dev.101digital.io/bank-information-service/1.0.0",
        "udScheme": "PH.PlatformDefined.Id",
        "pesonetScheme": "PH.BRSTN.AccountNumer",
        "instapayScheme": ""
      },
      "production": {
        "paymentBaseUrl": "https://api-ud-ow-dev.101digital.io/payment-service/1.0.0",
        "contactBaseUrl": "https://api-ud-ow-dev.101digital.io/contact-service/1.0.0",
        "bankInformationBaseUrl": "https://api-ud-ow-dev.101digital.io/bank-information-service/1.0.0",
        "udScheme": "PH.PlatformDefined.Id",
        "pesonetScheme": "PH.BRSTN.AccountNumer",
        "instapayScheme": ""
      }
    }
  },
  "dependencies": [],
  "templates": [
    {
      "id": "send-money-ud-ud-template",
      "templateName": "Button to send Money from UD to UD",
      "componentName": "SendMoneyFromUDToUD",
      "imports": [],
      "headers": [],
      "renders": [
        "      <Button label='Send Money' style={{ primaryContainerStyle: { margin: 20 } }} onPress={() => { $fn-send-money }} />"
      ],
      "functions": [
        {
          "id": "fn-send-money",
          "params": []
        }
      ]
    },
    {
      "id": "select-ud-account-component-template",
      "templateName": "Select UD account component template",
      "componentName": "SelectUDAccountComponent",
      "imports": ["import { SelectUDAccountComponent } from 'transfer-component';"],
      "renders": [
        "      <SelectUDAccountComponent",
        "        onNewRecipient={() => {",
        "          $fn-new-recipient",
        "        }}",
        "        onSelectedRecipient={(recipient) => {",
        "          $fn-selected-recipient",
        "        }}",
        "      />"
      ],
      "functions": [
        {
          "id": "fn-selected-recipient",
          "params": [
            {
              "name": "recipient",
              "type": "Recipient"
            },
            {
              "name": "isFromContact",
              "type": "bool"
            }
          ]
        },
        {
          "id": "fn-new-recipient"
        }
      ]
    },
    {
      "id": "new-recipient-component-template",
      "templateName": "New recipient component template",
      "componentName": "NewRecipientComponent",
      "imports": [
        "import { NewRecipientComponent } from 'transfer-component';",
        "import { AuthContext } from 'react-native-auth-component';"
      ],
      "headers": ["  const { profile } = useContext(AuthContext);"],
      "renders": [
        "        <NewRecipientComponent",
        "          userId={profile?.userId!}",
        "          onNext={(recipient) => {",
        "            $fn-on-next",
        "          }}",
        "        />"
      ],
      "functions": [
        {
          "id": "fn-on-next",
          "params": [
            {
              "name": "recipient",
              "type": "Recipient"
            },
            {
              "name": "isFromContact",
              "type": "bool"
            }
          ]
        }
      ]
    },
    {
      "id": "transfer-component-template",
      "templateName": "Transfer component template",
      "componentName": "TransferComponent",
      "imports": [
        "import { WalletContext } from '@banking-component/wallet-component';",
        "import { Recipient, TransferComponent, TransferStatus, EBank } from 'transfer-component';",
        "import {",
        "  TransferComponentRef,",
        "  TransferStep,",
        "} from 'transfer-component/src/components/transfer-component';"
      ],
      "headers": [
        " const { recipient, isFromContact, eBank } = route.params;",
        "  const { getDefaultWallet } = useContext(WalletContext);",
        "  const [step, setStep] = useState<TransferStep>(TransferStep.initial);",
        "  const [status, setStatus] = useState<TransferStatus>(TransferStatus.progressing);",
        "  const wallet = getDefaultWallet();",
        "  const transferComponentRef = useRef<TransferComponentRef>();",
        "",
        "  useEffect(() => {",
        "    navigation.addListener('beforeRemove', handleBackButton);",
        "    return () => {",
        "      navigation.removeListener('beforeRemove', handleBackButton);",
        "    };",
        "  }, [navigation, status, step]);",
        "",
        "  const handleBackButton = (e: any) => {",
        "    if (step === TransferStep.status && status === TransferStatus.progressing) {",
        "      e.preventDefault();",
        "    }",
        "  };",
        ""
      ],
      "renders": [
        "      <TransferComponent",
        "        ref={transferComponentRef}",
        "        recipient={recipient}",
        "        eBank={eBank}",
        "        isFromContact={isFromContact}",
        "        wallet={wallet}",
        "        onDone={() => navigation.popToTop()}",
        "        onChangedStep={setStep}",
        "        onChangedStatus={setStatus}",
        "        companyIcon={<Image source={images.raiffeisen} style={styles.unionImageStyle} />}",
        "        onCancel={() => navigation.goBack()}",
        "      />"
      ],
      "functions": [
        {
          "id": "fn-on-done",
          "params": []
        },
        {
          "id": "fn-on-cancel",
          "params": []
        }
      ]
    },
    {
      "id": "choose-transfer-method-component-template",
      "templateName": "Choose transfer method component template",
      "componentName": "TransferMethodComponent",
      "imports": ["import { TransferMethodComponent } from 'transfer-component';"],
      "headers": [],
      "renders": [
        "      <TransferMethodComponent",
        "        onPressed={(method) => {",
        "          if (method.LocalInstrument === 'UD_TO_UD') {",
        "            $fn-ud-transfer",
        "          } else if (method.LocalInstrument === 'UD_TO_OTHER') {",
        "            $fn-other-transfer",
        "          }",
        "        }}",
        "      />"
      ],
      "functions": [
        {
          "id": "fn-ud-transfer",
          "params": []
        },
        {
          "id": "fn-other-transfer",
          "params": []
        }
      ]
    },
    {
      "id": "select-ebank-component-template",
      "templateName": "Select e-bank component template",
      "componentName": "SelectEBankComponent",
      "imports": ["import { SelectEBankComponent } from 'transfer-component';"],
      "headers": [],
      "renders": [
        "      <SelectEBankComponent",
        "        onNext={(eBank) => {",
        "          $fn-selected-bank",
        "        }}",
        "      />"
      ],
      "functions": [
        {
          "id": "fn-selected-bank",
          "params": [
            {
              "name": "eBank",
              "type": "Ebank"
            },
            {
              "name": "isFromContact",
              "type": "bool"
            }
          ]
        }
      ]
    }
  ],
  "texts": {
    "input_transfer_component": {
      "lbl_header_title_pesonet": "Send now, receive later",
      "lbl_header_title_instapay": "Send now to",
      "lbl_header_subtitle": "Please enter recipient's details below.",
      "lbl_account_number": "Account number",
      "plh_account_number": "Enter account number",
      "lbl_account_name": "Account name",
      "plh_account_name": "Enter account name",
      "lbl_purpose_transfer": "Purpose of transfer",
      "plh_select_purpose_transfer": "Select a purpose",
      "plh_enter_purpose_transfer": "Enter purpose of transfer",
      "btn_next": "Next",
      "btn_select": "Select"
    },
    "input_amount_component": {
      "lbl_header_title": "Enter amount to send",
      "lbl_enter_amount": "Enter amount (min. of %s)",
      "plh_enter_amount": "%s",
      "lbl_note": "Note to recipient (optional)",
      "plh_note": "Add note",
      "btn_proceed": "Proceed",
      "lbl_to": "To :",
      "lbl_send_via": "Send via",
      "lbl_transfer_fee": "Transfer Fee",
      "lbl_free": "FREE",
      "lbl_balance": "My Pitaka Balance:",
      "btn_edit": "Edit",
      "msg_not_found_wallet": "Not found wallet details",
      "msg_recipient_invalid": "Recipient is invalid, please check again"
    },
    "review_transfer_component": {
      "lbl_header_title": "Review transfer",
      "lbl_header_subtitle": "Please make sure all account details are correct. Your account will be debited and this transaction will be irreversible once confirmed.",
      "btn_confirm_transaction": "Confirm transaction",
      "btn_cancel": "Cancel",
      "lbl_cancel_dialog_title": "Cancel Transfer",
      "msg_cancel_dialog_message": "Do you wish to cancel this payment?\nAll details will be discarded if you cancel this transaction.",
      "btn_cancel_transfer": "Yes, cancel transfer",
      "btn_continue_transfer": "No, continue transfer",
      "lbl_something_went_wrong": "Something went wrong"
    },
    "detail_transfer_component": {
      "lbl_from": "From",
      "lbl_send_money_to": "Send money to",
      "lbl_when": "When",
      "lbl_purpose_transfer": "Purpose of transfer",
      "lbl_note": "Note to recipient",
      "lbl_amount": "Amount",
      "lbl_transaction_fee": "Transaction Fee",
      "lbl_total_amount": "Total amount",
      "lbl_send_via": "Send via",
      "lbl_free": "FREE"
    },
    "authorize_transfer_component": {
      "lbl_header_title": "Please enter your passcode",
      "lbl_header_subtitle": "Enter the One-Time Password (OTP) sent on your registered mobile number.",
      "lbl_didnt_receive_otp": "Didn't receive a code? ",
      "lbl_duration_format": "Send another (in %s sec)",
      "btn_send_another": "Send another",
      "btn_continue": "Continue"
    },
    "transfer_status_component": {
      "lbl_hang_on": "Hang on for a moment",
      "msg_hang_on_transaction": "We're currently setting up your transaction.",
      "lbl_transfer_unsuccessful": "Transfer Request\nUnsuccessful!",
      "msg_transfer_unsuccessful": "Your money has been returned to your Pitaka. Please try again at a later time.",
      "btn_back_to_top": "Back to My Pitaka",
      "lbl_transfer_successful": "Transfer Request\nSuccessful!",
      "msg_transfer_successful_instantly": "Your money is on its way and should arrive instantly.",
      "msg_transfer_successful_later": "Your money is on its way and recipient should receive it %s",
      "lbl_transaction_date": "Transaction Date / Time",
      "lbl_reference_no": "Reference No.",
      "btn_add_contact": "Add to contacts",
      "msg_contact_add_successful": "Contact is added successful",
      "btn_share": "Share"
    },
    "select_ud_account_component": {
      "lbl_header_title": "Send to another\nUnionDigital account",
      "lbl_header_subtitle": "Who are you sending your money to?",
      "btn_new_recipient": "New Recipient",
      "lbl_recent_contact": "Recent Contacts",
      "btn_view_all": "View all",
      "msg_empty_contact": "You have no saved\ncontact as of this moment.",
      "lbl_contact_title": "Contacts",
      "lbl_contact_subtitle": "Select send money recipient.",
      "plh_search_contact": "Search contacts",
      "btn_select": "Select"
    },
    "new_recipient_component": {
      "lbl_header_title": "New Recipient",
      "lbl_header_subtitle": "Please enter recipient's mobile no. or account number.",
      "lbl_send_money_to": "Send money to",
      "btn_mobile": "Mobile",
      "btn_account": "Account",
      "lbl_mobile_number": "Mobile number",
      "lbl_account_number": "UD account number",
      "plh_mobile_number": "ex. 09123456789 or +639123456789",
      "plh_account_number": "Enter UD account number",
      "btn_proceed": "Proceed",
      "lbl_permission_required": "Need contacts permission",
      "msg_permission_required": "The app needs permission in order to select from contacts. Please adjust this in your settings.",
      "btn_open_settings": "Go to Settings",
      "btn_cancel": "Cancel",
      "lbl_something_went_wrong": "Something went wrong",
      "btn_select_device_contact": "Select from device contact"
    },
    "transfer_method_component": {
      "lbl_header_title": "Send Money",
      "lbl_header_subtitle": "Choose where to transfer.",
      "msg_service_unavailable": "Service temporarily unavailable"
    },
    "select_ewallet_component": {
      "lbl_header_title": "Send to other banks or e-wallets",
      "lbl_header_subtitle": "Select a bank or ewallet.",
      "plh_search": "Search for a bank or ewallet",
      "msg_bank_unavailable": "Bank is currently not available"
    },
    "error_connect_component": {
      "lbl_error_title": "Something went wrong",
      "msg_error_message": "We're having difficulty trying to\nconnect to our server. Please try again.",
      "btn_swipe_down": "Swipe down to refresh"
    }
  }
}
